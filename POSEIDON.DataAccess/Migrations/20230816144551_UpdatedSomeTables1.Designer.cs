// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using POSEIDON.DataAccess.Data;

#nullable disable

namespace POSEIDON.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230816144551_UpdatedSomeTables1")]
    partial class UpdatedSomeTables1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("POSEIDON.Models.Barangay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BarangayCode")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Deleted_At")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("LocationType")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PlantId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Updated_At")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.HasIndex("PlantId");

                    b.ToTable("Barangays");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BarangayCode = "01",
                            Created_At = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2693),
                            DistrictId = 20,
                            LocationType = "Urban",
                            Name = "Punta-Baja",
                            PlantId = 1,
                            Status = "Active",
                            Updated_At = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2694)
                        },
                        new
                        {
                            Id = 2,
                            BarangayCode = "02",
                            Created_At = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2697),
                            DistrictId = 20,
                            LocationType = "Rural",
                            Name = "Bunog",
                            PlantId = 1,
                            Status = "Active",
                            Updated_At = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2698)
                        },
                        new
                        {
                            Id = 3,
                            BarangayCode = "03",
                            Created_At = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2700),
                            DistrictId = 20,
                            LocationType = "Rural",
                            Name = "Iraan",
                            PlantId = 1,
                            Status = "Active",
                            Updated_At = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2701)
                        },
                        new
                        {
                            Id = 4,
                            BarangayCode = "04",
                            Created_At = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2703),
                            DistrictId = 20,
                            LocationType = "Rural",
                            Name = "Campong-Ulay",
                            PlantId = 1,
                            Status = "Active",
                            Updated_At = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2703)
                        },
                        new
                        {
                            Id = 5,
                            BarangayCode = "05",
                            Created_At = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2706),
                            DistrictId = 20,
                            LocationType = "Rural",
                            Name = "Ransang",
                            PlantId = 1,
                            Status = "Inactive",
                            Updated_At = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2706)
                        },
                        new
                        {
                            Id = 6,
                            BarangayCode = "06",
                            Created_At = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2708),
                            DistrictId = 20,
                            LocationType = "Rural",
                            Name = "Candawaga",
                            PlantId = 1,
                            Status = "Inactive",
                            Updated_At = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2709)
                        },
                        new
                        {
                            Id = 7,
                            BarangayCode = "07",
                            Created_At = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2712),
                            DistrictId = 20,
                            LocationType = "Rural",
                            Name = "Culasian",
                            PlantId = 1,
                            Status = "Inactive",
                            Updated_At = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2712)
                        },
                        new
                        {
                            Id = 8,
                            BarangayCode = "08",
                            Created_At = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2714),
                            DistrictId = 20,
                            LocationType = "Rural",
                            Name = "Panalingaan",
                            PlantId = 1,
                            Status = "Inactive",
                            Updated_At = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2715)
                        },
                        new
                        {
                            Id = 9,
                            BarangayCode = "09",
                            Created_At = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2717),
                            DistrictId = 20,
                            LocationType = "Rural",
                            Name = "Taburi",
                            PlantId = 1,
                            Status = "Inactive",
                            Updated_At = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2718)
                        },
                        new
                        {
                            Id = 10,
                            BarangayCode = "10",
                            Created_At = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2719),
                            DistrictId = 20,
                            LocationType = "Rural",
                            Name = "Latud",
                            PlantId = 1,
                            Status = "Inactive",
                            Updated_At = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2720)
                        },
                        new
                        {
                            Id = 11,
                            BarangayCode = "11",
                            Created_At = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2722),
                            DistrictId = 20,
                            LocationType = "Rural",
                            Name = "Canipaan",
                            PlantId = 1,
                            Status = "Inactive",
                            Updated_At = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2723)
                        });
                });

            modelBuilder.Entity("POSEIDON.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Deleted_At")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Updated_At")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("POSEIDON.Models.Classification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Deleted_At")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Updated_At")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("isBulk")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.ToTable("Classifications");
                });

            modelBuilder.Entity("POSEIDON.Models.Cluster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BarangayId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Deleted_At")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Updated_At")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("BarangayId");

                    b.ToTable("Clusters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BarangayId = 1,
                            Code = "001",
                            Created_At = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2765),
                            Name = "Malapandeg",
                            Status = "Active",
                            Updated_At = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2767)
                        },
                        new
                        {
                            Id = 2,
                            BarangayId = 1,
                            Code = "002",
                            Created_At = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2769),
                            Name = "Katutubo",
                            Status = "Active",
                            Updated_At = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2770)
                        });
                });

            modelBuilder.Entity("POSEIDON.Models.Consumer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("AccountNo")
                        .HasColumnType("longtext");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<int>("BrgyId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("ClassId")
                        .HasColumnType("int");

                    b.Property<int?>("ClusterId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Company")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("ConnectionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ContactNo")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Deleted_At")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Extension")
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("JobTitle")
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<int?>("LatestReading")
                        .HasColumnType("int");

                    b.Property<string>("MeterNo")
                        .HasColumnType("longtext");

                    b.Property<string>("MiddleName")
                        .HasColumnType("longtext");

                    b.Property<string>("SeniorIDNo")
                        .HasColumnType("longtext");

                    b.Property<string>("StandPipe")
                        .HasColumnType("longtext");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Updated_At")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("isSenior")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("BrgyId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ClassId");

                    b.HasIndex("ClusterId");

                    b.HasIndex("StatusId");

                    b.ToTable("Consumers");
                });

            modelBuilder.Entity("POSEIDON.Models.ConsumerStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Deleted_At")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Updated_At")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("ConsumerStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created_At = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Connected",
                            Updated_At = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Created_At = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Disconnected",
                            Updated_At = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Created_At = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Installation",
                            Updated_At = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Created_At = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Disconnection",
                            Updated_At = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            Created_At = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Meter Transfer",
                            Updated_At = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            Created_At = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Name Transfer",
                            Updated_At = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            Created_At = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Reconnection",
                            Updated_At = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            Created_At = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Temporary Closure",
                            Updated_At = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            Created_At = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Temporary Closed",
                            Updated_At = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            Created_At = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Payment",
                            Updated_At = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("POSEIDON.Models.District", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ProvinceId");

                    b.ToTable("Districts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Aborlan",
                            ProvinceId = 1,
                            created_at = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2540),
                            updated_at = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2542)
                        },
                        new
                        {
                            Id = 2,
                            Name = "Agutaya",
                            ProvinceId = 1,
                            created_at = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2545),
                            updated_at = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2546)
                        },
                        new
                        {
                            Id = 3,
                            Name = "Araceli",
                            ProvinceId = 1,
                            created_at = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2548),
                            updated_at = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2548)
                        },
                        new
                        {
                            Id = 4,
                            Name = "Balabac",
                            ProvinceId = 1,
                            created_at = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2550),
                            updated_at = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2551)
                        },
                        new
                        {
                            Id = 5,
                            Name = "Bataraza",
                            ProvinceId = 1,
                            created_at = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2552),
                            updated_at = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2553)
                        },
                        new
                        {
                            Id = 6,
                            Name = "Brooke's Point",
                            ProvinceId = 1,
                            created_at = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2555),
                            updated_at = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2555)
                        },
                        new
                        {
                            Id = 7,
                            Name = "Busuanga",
                            ProvinceId = 1,
                            created_at = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2557),
                            updated_at = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2557)
                        },
                        new
                        {
                            Id = 8,
                            Name = "Cagayancillo",
                            ProvinceId = 1,
                            created_at = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2559),
                            updated_at = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2560)
                        },
                        new
                        {
                            Id = 9,
                            Name = "Coron",
                            ProvinceId = 1,
                            created_at = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2561),
                            updated_at = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2562)
                        },
                        new
                        {
                            Id = 10,
                            Name = "Culion",
                            ProvinceId = 1,
                            created_at = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2564),
                            updated_at = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2564)
                        },
                        new
                        {
                            Id = 11,
                            Name = "Cuyo",
                            ProvinceId = 1,
                            created_at = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2566),
                            updated_at = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2566)
                        },
                        new
                        {
                            Id = 12,
                            Name = "Dumaran",
                            ProvinceId = 1,
                            created_at = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2568),
                            updated_at = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2569)
                        },
                        new
                        {
                            Id = 13,
                            Name = "El Nido",
                            ProvinceId = 1,
                            created_at = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2570),
                            updated_at = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2571)
                        },
                        new
                        {
                            Id = 14,
                            Name = "Kalayaan",
                            ProvinceId = 1,
                            created_at = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2574),
                            updated_at = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2574)
                        },
                        new
                        {
                            Id = 15,
                            Name = "Linapacan",
                            ProvinceId = 1,
                            created_at = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2577),
                            updated_at = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2578)
                        },
                        new
                        {
                            Id = 16,
                            Name = "Magsaysay",
                            ProvinceId = 1,
                            created_at = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2579),
                            updated_at = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2580)
                        },
                        new
                        {
                            Id = 17,
                            Name = "Narra",
                            ProvinceId = 1,
                            created_at = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2582),
                            updated_at = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2582)
                        },
                        new
                        {
                            Id = 18,
                            Name = "Puerto Princesa",
                            ProvinceId = 1,
                            created_at = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2584),
                            updated_at = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2585)
                        },
                        new
                        {
                            Id = 19,
                            Name = "Quezon",
                            ProvinceId = 1,
                            created_at = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2586),
                            updated_at = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2587)
                        },
                        new
                        {
                            Id = 20,
                            Name = "Rizal",
                            ProvinceId = 1,
                            created_at = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2589),
                            updated_at = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2590)
                        },
                        new
                        {
                            Id = 21,
                            Name = "Roxas",
                            ProvinceId = 1,
                            created_at = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2630),
                            updated_at = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2631)
                        },
                        new
                        {
                            Id = 22,
                            Name = "San Vicente",
                            ProvinceId = 1,
                            created_at = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2633),
                            updated_at = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2634)
                        },
                        new
                        {
                            Id = 23,
                            Name = "Sofronio Española",
                            ProvinceId = 1,
                            created_at = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2636),
                            updated_at = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2637)
                        },
                        new
                        {
                            Id = 24,
                            Name = "Taytay",
                            ProvinceId = 1,
                            created_at = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2638),
                            updated_at = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2639)
                        });
                });

            modelBuilder.Entity("POSEIDON.Models.MeterReader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Deleted_At")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Updated_At")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.ToTable("MeterReaders");
                });

            modelBuilder.Entity("POSEIDON.Models.Plant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Deleted_At")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Updated_At")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.ToTable("Plants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created_At = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2799),
                            DistrictId = 1,
                            Name = "Calupisan River Water System",
                            Status = "Active",
                            Updated_At = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2800)
                        },
                        new
                        {
                            Id = 2,
                            Created_At = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2803),
                            DistrictId = 1,
                            Name = "Magtayob River Water System",
                            Status = "Active",
                            Updated_At = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2804)
                        });
                });

            modelBuilder.Entity("POSEIDON.Models.Province", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Provinces");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Palawan",
                            created_at = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2164),
                            updated_at = new DateTime(2023, 8, 16, 22, 45, 50, 746, DateTimeKind.Local).AddTicks(2179)
                        });
                });

            modelBuilder.Entity("POSEIDON.Models.ApplicationUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("District")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("StreetAddress")
                        .HasColumnType("longtext");

                    b.HasDiscriminator().HasValue("ApplicationUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("POSEIDON.Models.Barangay", b =>
                {
                    b.HasOne("POSEIDON.Models.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("POSEIDON.Models.Plant", "Plant")
                        .WithMany()
                        .HasForeignKey("PlantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("District");

                    b.Navigation("Plant");
                });

            modelBuilder.Entity("POSEIDON.Models.Classification", b =>
                {
                    b.HasOne("POSEIDON.Models.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("District");
                });

            modelBuilder.Entity("POSEIDON.Models.Cluster", b =>
                {
                    b.HasOne("POSEIDON.Models.Barangay", "Barangay")
                        .WithMany()
                        .HasForeignKey("BarangayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Barangay");
                });

            modelBuilder.Entity("POSEIDON.Models.Consumer", b =>
                {
                    b.HasOne("POSEIDON.Models.Barangay", "Barangay")
                        .WithMany()
                        .HasForeignKey("BrgyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("POSEIDON.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("POSEIDON.Models.Classification", "Classification")
                        .WithMany()
                        .HasForeignKey("ClassId");

                    b.HasOne("POSEIDON.Models.Cluster", "Cluster")
                        .WithMany()
                        .HasForeignKey("ClusterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("POSEIDON.Models.ConsumerStatus", "ConsumerStatus")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Barangay");

                    b.Navigation("Category");

                    b.Navigation("Classification");

                    b.Navigation("Cluster");

                    b.Navigation("ConsumerStatus");
                });

            modelBuilder.Entity("POSEIDON.Models.District", b =>
                {
                    b.HasOne("POSEIDON.Models.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Province");
                });

            modelBuilder.Entity("POSEIDON.Models.MeterReader", b =>
                {
                    b.HasOne("POSEIDON.Models.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("District");
                });

            modelBuilder.Entity("POSEIDON.Models.Plant", b =>
                {
                    b.HasOne("POSEIDON.Models.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("District");
                });
#pragma warning restore 612, 618
        }
    }
}
