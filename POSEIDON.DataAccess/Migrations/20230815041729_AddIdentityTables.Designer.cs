// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using POSEIDON.DataAccess.Data;

#nullable disable

namespace POSEIDON.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230815041729_AddIdentityTables")]
    partial class AddIdentityTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("POSEIDON.Models.Barangay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BarangayCode")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Deleted_At")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("LocationType")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PlantId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Updated_At")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.HasIndex("PlantId");

                    b.ToTable("Barangays");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BarangayCode = "01",
                            Created_At = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9939),
                            DistrictId = 20,
                            LocationType = "Urban",
                            Name = "Punta-Baja",
                            PlantId = 1,
                            Status = "Active",
                            Updated_At = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9940)
                        },
                        new
                        {
                            Id = 2,
                            BarangayCode = "02",
                            Created_At = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9943),
                            DistrictId = 20,
                            LocationType = "Rural",
                            Name = "Bunog",
                            PlantId = 1,
                            Status = "Active",
                            Updated_At = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9943)
                        },
                        new
                        {
                            Id = 3,
                            BarangayCode = "03",
                            Created_At = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9945),
                            DistrictId = 20,
                            LocationType = "Rural",
                            Name = "Iraan",
                            PlantId = 1,
                            Status = "Active",
                            Updated_At = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9945)
                        },
                        new
                        {
                            Id = 4,
                            BarangayCode = "04",
                            Created_At = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9947),
                            DistrictId = 20,
                            LocationType = "Rural",
                            Name = "Campong-Ulay",
                            PlantId = 1,
                            Status = "Active",
                            Updated_At = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9948)
                        },
                        new
                        {
                            Id = 5,
                            BarangayCode = "05",
                            Created_At = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9949),
                            DistrictId = 20,
                            LocationType = "Rural",
                            Name = "Ransang",
                            PlantId = 1,
                            Status = "Inactive",
                            Updated_At = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9950)
                        },
                        new
                        {
                            Id = 6,
                            BarangayCode = "06",
                            Created_At = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9952),
                            DistrictId = 20,
                            LocationType = "Rural",
                            Name = "Candawaga",
                            PlantId = 1,
                            Status = "Inactive",
                            Updated_At = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9952)
                        },
                        new
                        {
                            Id = 7,
                            BarangayCode = "07",
                            Created_At = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9955),
                            DistrictId = 20,
                            LocationType = "Rural",
                            Name = "Culasian",
                            PlantId = 1,
                            Status = "Inactive",
                            Updated_At = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9955)
                        },
                        new
                        {
                            Id = 8,
                            BarangayCode = "08",
                            Created_At = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9957),
                            DistrictId = 20,
                            LocationType = "Rural",
                            Name = "Panalingaan",
                            PlantId = 1,
                            Status = "Inactive",
                            Updated_At = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9957)
                        },
                        new
                        {
                            Id = 9,
                            BarangayCode = "09",
                            Created_At = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9959),
                            DistrictId = 20,
                            LocationType = "Rural",
                            Name = "Taburi",
                            PlantId = 1,
                            Status = "Inactive",
                            Updated_At = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9959)
                        },
                        new
                        {
                            Id = 10,
                            BarangayCode = "10",
                            Created_At = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9961),
                            DistrictId = 20,
                            LocationType = "Rural",
                            Name = "Latud",
                            PlantId = 1,
                            Status = "Inactive",
                            Updated_At = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9962)
                        },
                        new
                        {
                            Id = 11,
                            BarangayCode = "11",
                            Created_At = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9963),
                            DistrictId = 20,
                            LocationType = "Rural",
                            Name = "Canipaan",
                            PlantId = 1,
                            Status = "Inactive",
                            Updated_At = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9964)
                        });
                });

            modelBuilder.Entity("POSEIDON.Models.Classification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Deleted_At")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Updated_At")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("isBulk")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.ToTable("Classifications");
                });

            modelBuilder.Entity("POSEIDON.Models.Cluster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BarangayId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Deleted_At")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Updated_At")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("BarangayId");

                    b.ToTable("Clusters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BarangayId = 1,
                            Code = "001",
                            Created_At = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9990),
                            Name = "Malapandeg",
                            Status = "Active",
                            Updated_At = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9991)
                        },
                        new
                        {
                            Id = 2,
                            BarangayId = 1,
                            Code = "002",
                            Created_At = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9993),
                            Name = "Katutubo",
                            Status = "Active",
                            Updated_At = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9993)
                        });
                });

            modelBuilder.Entity("POSEIDON.Models.District", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ProvinceId");

                    b.ToTable("Districts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Aborlan",
                            ProvinceId = 1,
                            created_at = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9790),
                            updated_at = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9792)
                        },
                        new
                        {
                            Id = 2,
                            Name = "Agutaya",
                            ProvinceId = 1,
                            created_at = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9794),
                            updated_at = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9794)
                        },
                        new
                        {
                            Id = 3,
                            Name = "Araceli",
                            ProvinceId = 1,
                            created_at = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9795),
                            updated_at = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9796)
                        },
                        new
                        {
                            Id = 4,
                            Name = "Balabac",
                            ProvinceId = 1,
                            created_at = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9797),
                            updated_at = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9798)
                        },
                        new
                        {
                            Id = 5,
                            Name = "Bataraza",
                            ProvinceId = 1,
                            created_at = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9799),
                            updated_at = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9799)
                        },
                        new
                        {
                            Id = 6,
                            Name = "Brooke's Point",
                            ProvinceId = 1,
                            created_at = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9800),
                            updated_at = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9801)
                        },
                        new
                        {
                            Id = 7,
                            Name = "Busuanga",
                            ProvinceId = 1,
                            created_at = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9802),
                            updated_at = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9803)
                        },
                        new
                        {
                            Id = 8,
                            Name = "Cagayancillo",
                            ProvinceId = 1,
                            created_at = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9804),
                            updated_at = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9804)
                        },
                        new
                        {
                            Id = 9,
                            Name = "Coron",
                            ProvinceId = 1,
                            created_at = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9805),
                            updated_at = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9806)
                        },
                        new
                        {
                            Id = 10,
                            Name = "Culion",
                            ProvinceId = 1,
                            created_at = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9807),
                            updated_at = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9808)
                        },
                        new
                        {
                            Id = 11,
                            Name = "Cuyo",
                            ProvinceId = 1,
                            created_at = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9809),
                            updated_at = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9809)
                        },
                        new
                        {
                            Id = 12,
                            Name = "Dumaran",
                            ProvinceId = 1,
                            created_at = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9810),
                            updated_at = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9811)
                        },
                        new
                        {
                            Id = 13,
                            Name = "El Nido",
                            ProvinceId = 1,
                            created_at = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9812),
                            updated_at = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9813)
                        },
                        new
                        {
                            Id = 14,
                            Name = "Kalayaan",
                            ProvinceId = 1,
                            created_at = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9814),
                            updated_at = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9814)
                        },
                        new
                        {
                            Id = 15,
                            Name = "Linapacan",
                            ProvinceId = 1,
                            created_at = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9815),
                            updated_at = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9817)
                        },
                        new
                        {
                            Id = 16,
                            Name = "Magsaysay",
                            ProvinceId = 1,
                            created_at = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9818),
                            updated_at = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9819)
                        },
                        new
                        {
                            Id = 17,
                            Name = "Narra",
                            ProvinceId = 1,
                            created_at = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9820),
                            updated_at = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9821)
                        },
                        new
                        {
                            Id = 18,
                            Name = "Puerto Princesa",
                            ProvinceId = 1,
                            created_at = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9822),
                            updated_at = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9822)
                        },
                        new
                        {
                            Id = 19,
                            Name = "Quezon",
                            ProvinceId = 1,
                            created_at = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9823),
                            updated_at = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9824)
                        },
                        new
                        {
                            Id = 20,
                            Name = "Rizal",
                            ProvinceId = 1,
                            created_at = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9825),
                            updated_at = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9825)
                        },
                        new
                        {
                            Id = 21,
                            Name = "Roxas",
                            ProvinceId = 1,
                            created_at = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9826),
                            updated_at = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9827)
                        },
                        new
                        {
                            Id = 22,
                            Name = "San Vicente",
                            ProvinceId = 1,
                            created_at = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9828),
                            updated_at = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9829)
                        },
                        new
                        {
                            Id = 23,
                            Name = "Sofronio Española",
                            ProvinceId = 1,
                            created_at = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9830),
                            updated_at = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9830)
                        },
                        new
                        {
                            Id = 24,
                            Name = "Taytay",
                            ProvinceId = 1,
                            created_at = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9831),
                            updated_at = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9832)
                        });
                });

            modelBuilder.Entity("POSEIDON.Models.MeterReader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.ToTable("MeterReaders");
                });

            modelBuilder.Entity("POSEIDON.Models.Plant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Deleted_At")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Updated_At")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.ToTable("Plants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created_At = new DateTime(2023, 8, 15, 12, 17, 28, 940, DateTimeKind.Local).AddTicks(13),
                            DistrictId = 1,
                            Name = "Calupisan River Water System",
                            Status = "Active",
                            Updated_At = new DateTime(2023, 8, 15, 12, 17, 28, 940, DateTimeKind.Local).AddTicks(14)
                        },
                        new
                        {
                            Id = 2,
                            Created_At = new DateTime(2023, 8, 15, 12, 17, 28, 940, DateTimeKind.Local).AddTicks(15),
                            DistrictId = 1,
                            Name = "Magtayob River Water System",
                            Status = "Active",
                            Updated_At = new DateTime(2023, 8, 15, 12, 17, 28, 940, DateTimeKind.Local).AddTicks(16)
                        });
                });

            modelBuilder.Entity("POSEIDON.Models.Province", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Provinces");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Palawan",
                            created_at = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9556),
                            updated_at = new DateTime(2023, 8, 15, 12, 17, 28, 939, DateTimeKind.Local).AddTicks(9568)
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("POSEIDON.Models.Barangay", b =>
                {
                    b.HasOne("POSEIDON.Models.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("POSEIDON.Models.Plant", "Plant")
                        .WithMany()
                        .HasForeignKey("PlantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("District");

                    b.Navigation("Plant");
                });

            modelBuilder.Entity("POSEIDON.Models.Classification", b =>
                {
                    b.HasOne("POSEIDON.Models.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("District");
                });

            modelBuilder.Entity("POSEIDON.Models.Cluster", b =>
                {
                    b.HasOne("POSEIDON.Models.Barangay", "Barangay")
                        .WithMany()
                        .HasForeignKey("BarangayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Barangay");
                });

            modelBuilder.Entity("POSEIDON.Models.District", b =>
                {
                    b.HasOne("POSEIDON.Models.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Province");
                });

            modelBuilder.Entity("POSEIDON.Models.MeterReader", b =>
                {
                    b.HasOne("POSEIDON.Models.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("District");
                });

            modelBuilder.Entity("POSEIDON.Models.Plant", b =>
                {
                    b.HasOne("POSEIDON.Models.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("District");
                });
#pragma warning restore 612, 618
        }
    }
}
